{"version":3,"sources":["components/SideMenu.js","components/Header.js","components/PageHeader.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/useTable.js","components/Popup.js","pages/Employees/Employees.js","App/App.js","serviceWorker.js","index.js"],"names":["withStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","backgroundImage","props","classes","className","useStyles","makeStyles","theme","root","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","AppBar","pageHeader","marginBottom","pageIcon","color","pageTitle","paddingLeft","PageHeader","title","subTitle","icon","Paper","elevation","square","Card","Typography","variant","component","margin","label","textTransform","minWidth","secondary","palette","light","main","primary","Controls","Input","name","value","error","onChange","other","TextField","helperText","RadioGroup","items","FormControl","FormLabel","row","map","item","FormControlLabel","key","id","control","Radio","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","text","size","onClick","ActionButton","children","Form","autoComplete","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","departments","x","department","departmentId","initialFValues","fullName","email","amount","description","Date","isPermanent","EmployeeForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","crypto","setErrors","Object","every","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","Grid","container","xs","crypo","hireDate","type","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","pageContent","newButton","right","Employees","setRecordForEdit","employeeService","setRecords","setFilterFn","Toolbar","InputProps","startAdornment","InputAdornment","Search","filter","toLowerCase","includes","startIcon","TableBody","employee","recordIndex","findIndex","createMuiTheme","background","default","overrides","MuiAppBar","transform","MuiIconButton","disableRipple","appMain","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.89ad1501.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, withStyles } from \"@material-ui/core\";\n\n// withStyles & makeStyles\n\nconst style = {\n    sideMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'absolute',\n        left: '0px',\n        width: '320px',\n        height: '100%',\n        backgroundColor: '#253053',\n        backgroundImage: \n \"url('https://thumbs.dreamstime.com/b/golden-bitcoins-black-background-left-side-trading-concept-crypto-currency-bitcoin-balck-94366896.jpg')\",\n    }\n}\n\nconst SideMenu = (props) => {\n    const { classes } = props;\n    return (\n        <div className={classes.sideMenu}>\n\n        </div>\n    )\n}\n\nexport default withStyles(style)(SideMenu);\n","import React from 'react'\nimport { AppBar, makeStyles } from '@material-ui/core'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fff',\n        \n    },\n    searchInput: {\n        opacity: '0.6',\n        padding: `0px ${theme.spacing(1)}px`,\n        fontSize: '0.8rem',\n        '&:hover': {\n            backgroundColor: '#253053'\n        },\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(1)\n        }\n    }\n}))\n\nexport default function Header() {\n\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            backgroundColor: '#f2f2f2'\n        </AppBar>\n    )\n}\n","import React from 'react'\nimport { Paper, Card, Typography, makeStyles, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fdfdff'\n    },\n    pageHeader:{\n        padding:theme.spacing(4),\n        display:'flex',\n        marginBottom:theme.spacing(2)\n    },\n    pageIcon:{\n        display:'hi',\n        padding:theme.spacing(1),\n        color:'456056'\n    },\n    pageTitle:{\n        paddingLeft:theme.spacing(4),\n        '& .MuiTypography-subtitle2':{\n            opacity:'0.6'\n        }\n    }\n}))\n\nexport default function PageHeader(props) {\n\n    const classes = useStyles();\n    const { title, subTitle, icon } = props;\n    return (\n        <Paper elevation={0} square className={classes.root}>\n            <div className={classes.pageHeader}>\n                <Card className={classes.pageIcon}>\n                    {icon}\n                </Card>\n                <div className={classes.pageTitle}>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\">\n                        {title}</Typography>\n                    <Typography\n                        variant=\"subtitle2\"\n                        component=\"div\">\n                        {subTitle}</Typography>\n                </div>\n            </div>\n        </Paper>\n    )\n}\n","import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(0.5)\n    },\n    label: {\n        textTransform: 'none'\n    }\n}))\n\nexport default function Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}\n            classes={{ root: classes.root, label: classes.label }}>\n            {text}\n        </MuiButton>\n    )\n}\n","import React from 'react'\nimport { Button, makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minWidth: 0,\n        margin: theme.spacing(0.5)\n    },\n    secondary: {\n        backgroundColor: theme.palette.secondary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.secondary.main,\n        }\n    },\n    primary: {\n        backgroundColor: theme.palette.primary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.primary.main,\n        }\n    },\n}))\n\nexport default function ActionButton(props) {\n\n    const { color, children, onClick } = props;\n    const classes = useStyles();\n\n    return (\n        <Button\n            className={`${classes.root} ${classes[color]}`}\n            onClick={onClick}>\n            {children}\n        </Button>\n    )\n}\n","import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport Checkbox from \"./Checkbox\";\nimport DatePicker from \"./DatePicker\";\nimport Button from \"./Button\";\nimport ActionButton from \"./ActionButton\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    DatePicker,\n    Button,\n    ActionButton\n}\n\nexport default Controls;","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange, ...other } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...other}\n            {...(error && {error:true,helperText:error})}\n        />\n    )\n}\n","import React from 'react'\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nexport default function RadioGroup(props) {\n\n    const { name, label, value, onChange, items } = props;\n\n    return (\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n            <MuiRadioGroup row\n                name={name}\n                value={value}\n                onChange={onChange}>\n                {\n                    items.map(\n                        item => (\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\n                        )\n                    )\n                }\n            </MuiRadioGroup>\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\n\nexport default function Select(props) {\n\n    const { name, label, value,error=null, onChange, options } = props;\n\n    return (\n        <FormControl variant=\"outlined\"\n        {...(error && {error:true})}>\n            <InputLabel>{label}</InputLabel>\n            <MuiSelect\n                label={label}\n                name={name}\n                value={value}\n                onChange={onChange}>\n                <MenuItem value=\"\">None</MenuItem>\n                {\n                    options.map(\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                    )\n                }\n            </MuiSelect>\n            {error && <FormHelperText>{error}</FormHelperText>}\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\n\nexport default function Checkbox(props) {\n\n    const { name, label, value, onChange } = props;\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <FormControl>\n            <FormControlLabel\n                control={<MuiCheckbox\n                    name={name}\n                    color=\"primary\"\n                    checked={value}\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\n                />}\n                label={label}\n            />\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function DatePicker(props) {\n\n    const { name, label, value, onChange } = props\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\n                label={label}\n                format=\"MMM/dd/yyyy\"\n                name={name}\n                value={value}\n                onChange={date =>onChange(convertToDefEventPara(name,date))}\n\n            />\n        </MuiPickersUtilsProvider>\n    )\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n\n\n    const [values, setValues] = useState(initialFValues);\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n        if (validateOnChange)\n            validate({ [name]: value })\n    }\n\n    const resetForm = () => {\n        setValues(initialFValues);\n        setErrors({})\n    }\n\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n\n    }\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '80%',\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\nexport function Form(props) {\n\n    const classes = useStyles();\n    const { children, ...other } = props;\n    return (\n        <form className={classes.root} autoComplete=\"off\" {...other}>\n            {props.children}\n        </form>\n    )\n}\n\n","const KEYS = {\n    employees: 'employees',\n    employeeId: 'employeeId'\n}\n\nexport const getDepartmentCollection = () => ([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    { id: '4', title: 'HR' },\n])\nexport const getCryptoCollection = () => ([\n    { id: '1', title: 'BTC' },\n    { id: '2', title: 'ETH' },\n    { id: '3', title: 'Tether' },\n])\n\n\nexport function insertEmployee(data) {\n    let employees = getAllEmployees();\n    data['id'] = generateEmployeeId()\n    employees.push(data)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex(x => x.id == data.id);\n    employees[recordIndex] = { ...data }\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId() {\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    //map departmentID to department title\n    let departments = getDepartmentCollection();\n    return employees.map(x => ({\n        ...x,\n        department: departments[x.departmentId - 1].title\n    }))\n}","import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\n\n\n\n\nconst initialFValues = {\n    id: 0,\n    fullName: '',\n    email: '',\n    amount: '',\n    description: '',\n    departmentId: '',\n    Date: new Date(),\n    isPermanent: false,\n}\n\nexport default function EmployeeForm(props) {\n    const { addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        if ('amount' in fieldValues)\n            temp.amount = fieldValues.amount > 6 ? \"\" : \"Minimum 6 numbers required.\"   \n        if ('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\n        if ('crypto' in fieldValues)\n            temp.crypto = fieldValues.crypto.length != 0 ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() => {\n        if (recordForEdit != null)\n            setValues({\n                ...recordForEdit\n            })\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                    <Controls.Input\n                        label=\"Email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n                    <Controls.Input\n                        label=\"Amount\"\n                        name=\"amount\"\n                        value={values.amount}\n                        onChange={handleInputChange}\n                        error={errors.amount}\n                    />\n                      <Controls.Input\n                        name=\"description\"\n                        label=\"Description\"\n                        value={values.description}\n                        onChange={handleInputChange}\n                        error={errors.description}\n                    />\n\n                </Grid>\n                <Grid item xs={6}>\n\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n                     <Controls.Select\n                        name=\"crypto\"\n                        label=\"Crypto\"\n                        value={values.crypto}\n                        onChange={handleInputChange}\n                        options={employeeService.getCryptoCollection()}\n                        error={errors.crypo}\n                    />\n                    <Controls.DatePicker\n                        name=\"Date\"\n                        label=\"Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\" />\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick={resetForm} />\n                    </div>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n","import React, { useState } from 'react'\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records, headCells,filterFn) {\n\n    const classes = useStyles();\n\n    const pages = [3]\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\n    const [order, setOrder] = useState()\n    const [orderBy, setOrderBy] = useState()\n\n    const TblContainer = props => (\n        <Table className={classes.table}>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n\n        const handleSortRequest = cellId => {\n            const isAsc = orderBy === cellId && order === \"asc\";\n            setOrder(isAsc ? 'desc' : 'asc');\n            setOrderBy(cellId)\n        }\n\n        return (<TableHead>\n            <TableRow>\n                {\n                    headCells.map(headCell => (\n                        <TableCell key={headCell.id}\n                            sortDirection={orderBy === headCell.id ? order : false}>\n                            {headCell.disableSorting ? headCell.label :\n                                <TableSortLabel\n                                    active={orderBy === headCell.id}\n                                    direction={orderBy === headCell.id ? order : 'asc'}\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\n                                    {headCell.label}\n                                </TableSortLabel>\n                            }\n                        </TableCell>))\n                }\n            </TableRow>\n        </TableHead>)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10))\n        setPage(0);\n    }\n\n    const TblPagination = () => (<TablePagination\n        component=\"div\"\n        page={page}\n        rowsPerPageOptions={pages}\n        rowsPerPage={rowsPerPage}\n        count={records.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n    />)\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n    }\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n}\n","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\nimport Controls from \"./controls/Controls\";\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    dialogWrapper: {\n        padding: theme.spacing(2),\n        position: 'absolute',\n        top: theme.spacing(5)\n    },\n    dialogTitle: {\n        paddingRight: '0px'\n    }\n}))\n\nexport default function Popup(props) {\n\n    const { title, children, openPopup, setOpenPopup } = props;\n    const classes = useStyles();\n\n    return (\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\n            <DialogTitle className={classes.dialogTitle}>\n                <div style={{ display: 'flex' }}>\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\n                        {title}\n                    </Typography>\n                    <Controls.ActionButton\n                        color=\"secondary\"\n                        onClick={()=>{setOpenPopup(false)}}>\n                        <CloseIcon />\n                    </Controls.ActionButton>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers>\n                {children}\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport EmployeeForm from \"./EmployeeForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from \"../../components/useTable\";\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from \"../../components/controls/Controls\";\nimport { Search } from \"@material-ui/icons\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from \"../../components/Popup\";\n\n\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: theme.spacing(5),\n        padding: theme.spacing(3)\n    },\n    searchInput: {\n        width: '75%'\n    },\n    newButton: {\n        position: 'absolute',\n        right: '10px'\n    }\n}))\n\n\nconst headCells = [\n    { id: 'fullName', label: 'Employee Name' },\n    { id: 'email', label: 'Email Address ' },\n    { id: 'amount', label: 'Amount in $' },\n    { id: 'department', label: 'Department' },\n\n]\n\nexport default function Employees() {\n\n    const classes = useStyles();\n    const [recordForEdit, setRecordForEdit] = useState(null)\n    const [records, setRecords] = useState(employeeService.getAllEmployees())\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\n    const [openPopup, setOpenPopup] = useState(false)\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records, headCells, filterFn);\n\n    const handleSearch = e => {\n        let target = e.target;\n        setFilterFn({\n            fn: items => {\n                if (target.value == \"\")\n                    return items;\n                else\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\n            }\n        })\n    }\n\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id == 0)\n            employeeService.insertEmployee(employee)\n        else\n            employeeService.updateEmployee(employee)\n        resetForm()\n        setRecordForEdit(null)\n        setOpenPopup(false)\n        setRecords(employeeService.getAllEmployees())\n    }\n\n    const openInPopup = item => {\n        setRecordForEdit(item)\n        setOpenPopup(true)\n    }\n\n    return (\n        <>\n            <PageHeader\n                title=\"Employee Payment Portal\"\n                subTitle=\"Payment through cryptocurrency\"\n\n            />\n            <Paper className={classes.pageContent}>\n\n                <Toolbar>\n                    <Controls.Input\n                        label=\"Search Employees\"\n                        className={classes.searchInput}\n                        InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\">\n                                <Search />\n                            </InputAdornment>)\n                        }}\n                        onChange={handleSearch}\n                    />\n                    <Controls.Button\n                        text=\"Payment\"\n                        variant=\"outlined\"\n                        startIcon={<AddIcon />}\n                        className={classes.newButton}\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\n                    />\n                </Toolbar>\n                <TblContainer>\n                    <TblHead />\n                    <TableBody>\n                        {\n                            recordsAfterPagingAndSorting().map(item =>\n                                (<TableRow key={item.id}>\n                                    <TableCell>{item.fullName}</TableCell>\n                                    <TableCell>{item.email}</TableCell>\n                                    <TableCell>{item.amount}</TableCell>\n                                    <TableCell>{item.department}</TableCell>\n                                    <TableCell>\n                                       \n                                    </TableCell>\n                                </TableRow>)\n                            )\n                        }\n                    </TableBody>\n                </TblContainer>\n                <TblPagination />\n            </Paper>\n            <Popup\n                title=\"Employee Paymnet Info\"\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n            >\n                <EmployeeForm\n                    recordForEdit={recordForEdit}\n                    addOrEdit={addOrEdit} />\n            </Popup>\n        </>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport SideMenu from \"../components/SideMenu\";\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Header from \"../components/Header\";\nimport PageHeader from '../components/PageHeader';\n\nimport Employees from \"../pages/Employees/Employees\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: '#3c44b126'\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: '#f8324526'\n    },\n    background: {\n      default: \"#f4f5fd\"\n    },\n  },\n  overrides:{\n    MuiAppBar:{\n      root:{\n        transform:'translateZ(0)'\n      }\n    }\n  },\n  props:{\n    MuiIconButton:{\n      disableRipple:true\n    }\n  }\n})\n\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '320px',\n    width: '100%'\n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SideMenu />\n      <div className={classes.appMain}>\n        <Header />\n        \n        <Employees />\n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}